openapi: 3.0.1
info:
  title: Obsidian Vault Assistant
  description: |
    Access and interact with your Obsidian vault through ChatGPT.
    This plugin enables natural language querying of your personal knowledge base, 
    analysis of themes across your notes, and generation of reflections.
  version: 1.0.0
servers:
  - url: https://4b95-2600-1700-966e-400-59d-5bc8-77b-6d55.ngrok-free.app
    description: Development server
paths:
  /query:
    get:
      operationId: queryVault
      summary: Query your Obsidian vault
      description: |
        Search your Obsidian vault using natural language queries.
        Results can be filtered by tags or date ranges.
        The response includes a synthesized answer and the source documents.
      parameters:
        - name: q
          in: query
          description: Natural language query
          schema:
            type: string
          required: true
        - name: session_id
          in: query
          description: Optional session ID for conversation continuity
          schema:
            type: string
        - name: tags
          in: query
          description: Optional list of tags to filter by
          schema:
            type: array
            items:
              type: string
        - name: date_range
          in: query
          description: Optional date range filter (e.g. "last_30_days", "last_week", "this_month")
          schema:
            type: string
      responses:
        '200':
          description: Query result with sources
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
                    description: Synthesized answer with links to source thoughts
                  sources:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                        excerpt:
                          type: string
                        score:
                          type: number
                          format: float
                  session_id:
                    type: string
                    description: Session ID for this conversation
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
  /themes:
    get:
      operationId: getThemes
      summary: Get most discussed themes and patterns
      description: |
        Analyze your vault to identify recurring themes and patterns.
        This provides insight into the topics you write about most frequently.
      responses:
        '200':
          description: Thematic analysis
          content:
            application/json:
              schema:
                type: object
                properties:
                  themes:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        frequency:
                          type: integer
                        related_tags:
                          type: array
                          items:
                            type: string
  /reflect:
    post:
      operationId: generateReflection
      summary: Generate reflections over time
      description: |
        Generate reflections based on your journal entries.
        You can specify the timeframe and the perspective.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mode:
                  type: string
                  enum: [weekly, monthly]
                  description: Reflection timeframe
                agent:
                  type: string
                  enum: [gnosis, anima, archivist]
                  description: Reflection perspective/personality
      responses:
        '200':
          description: GPT-generated reflection
          content:
            application/json:
              schema:
                type: object
                properties:
                  reflection:
                    type: string
                  insights:
                    type: array
                    items:
                      type: string
                  time_period:
                    type: string
  /health:
    get:
      operationId: healthCheck
      summary: Check the health of the API
      description: Simple health check to ensure the API is running
      responses:
        '200':
          description: Health status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
  /index:
    post:
      operationId: indexVault
      summary: Index the Obsidian vault
      description: |
        Index the Obsidian vault content into the vector store.
        This needs to be called before querying if the index does not exist.
      responses:
        '200':
          description: Indexing result
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  document_count:
                    type: integer 