openapi: 3.1.0
info:
  title: Gnosis RAG API
  description: API for querying and analyzing Obsidian vaults using hybrid RAG
  version: "1.0.0"
servers:
  - url: https://gnosis-rag-api.onrender.com
    description: Cloudflare Tunnel URL
paths:
  /health:
    get:
      summary: Health Check
      description: Provides a comprehensive health check of the API and RAG pipeline.
      operationId: health_check_health_get
      responses:
        "200":
          description: The service is healthy and ready to accept requests.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  message:
                    type: string
                    example: RAG pipeline is healthy.
        "503":
          description: The service is not ready.
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: "Service Unavailable: Index and document store are out of sync. Please re-index the vault."
  /sync:
    post:
      summary: Sync Vault
      description: Performs an incremental sync of the Obsidian vault, updating the index with only the changes since the last sync.
      operationId: sync_vault_sync_post
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Vault synchronized successfully.
                  added:
                    type: integer
                    example: 5
                  updated:
                    type: integer
                    example: 2
                  deleted:
                    type: integer
                    example: 1
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetail"
  /index:
    post:
      summary: Index Vault
      description: Index the Obsidian vault content into the vector store. This must be called before querying.
      operationId: index_vault_index_post
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  document_count:
                    type: integer
                  total_documents:
                    type: integer
                  success_rate:
                    type: string
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetail"
  /save:
    post:
      summary: Save Content
      description: Save a conversation or exact content to the daily note in the Obsidian vault.
      operationId: save_content_save_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SaveRequest"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - message
                  - file_path
                properties:
                  status:
                    type: string
                    description: Status of the save operation
                    example: "success"
                  message:
                    type: string
                    description: Human-readable message about the operation
                    example: "Conversation 'My Chat' saved to 2025-06-27.md"
                  file_path:
                    type: string
                    description: Relative path where the content was saved
                    example: "2025/06/2025-06-27.md"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetail"
  /query:
    get:
      summary: Query Vault
      description: Query the Obsidian vault using hybrid search with optional filters.
      operationId: query_vault_query_get
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
          description: The search query.
        - name: session_id
          in: query
          required: false
          schema:
            type: string
          description: The session ID to maintain conversation context.
        - name: tags
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
          description: A list of tags to filter the search.
        - name: date_range
          in: query
          required: false
          schema:
            type: string
          description: "Date range to filter (e.g., 'today', 'last_7_days', '2023-01-01:2023-01-31')."
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QueryResponse"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetail"
components:
  schemas:
    SaveRequest:
      title: SaveRequest
      required:
        - conversation_name
      type: object
      properties:
        conversation_name:
          type: string
          title: Conversation Name
          description: Name for the conversation being saved
          example: "My Chat with GPT"
        session_id:
          type: string
          title: Session ID
          description: Optional session ID for conversation-based saving
          example: "session_123"
        messages:
          type: array
          title: Messages
          description: Array of conversation messages
          items:
            type: object
            required:
              - role
              - content
            properties:
              role:
                type: string
                description: Message role
                enum: ["user", "assistant", "system"]
                example: "user"
              content:
                type: string
                description: Message content
                example: "Hello, how are you?"
        content:
          type: string
          title: Content
          description: Direct content to save (alternative to messages)
          example: "This is the content I want to save directly."
    QueryResponse:
      title: QueryResponse
      type: object
      properties:
        query:
          type: string
        answer:
          type: string
        sources:
          type: array
          items:
            type: object
            properties:
              content:
                type: string
              metadata:
                type: object
              score:
                type: number
        total_results:
          type: integer
    ErrorDetail:
      title: ErrorDetail
      type: object
      properties:
        detail:
          type: string
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          type: array
          items:
            anyOf:
              - type: string
              - type: integer
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          type: array
          items:
            $ref: "#/components/schemas/ValidationError"
          title: Detail 